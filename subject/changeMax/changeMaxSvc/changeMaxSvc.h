/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "main.go"

#include <stdlib.h>
typedef struct {
	char *data;
	int size;
}GoMem;
 
#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


//初始化环境
//host *C.char, token *C.char, userId *C.char, userDir *C.char
extern __declspec(dllexport) void InitChangeMaxSvc(char* host, char* token, char* userId, char* userDir);

//设置用户名
extern __declspec(dllexport) void SetUserName(char* name);

//转模列表
extern __declspec(dllexport) void GetJobs(GoInt page, GoInt pageCount, GoMem* ret, GoInterface* err);

//转模列表 待更新缓存
//ret *string
extern __declspec(dllexport) void GetJobsCache(GoMem* ret);

//新建转模任务，返回oss信息，上传文件，通知服务开始转模
//file *C.char, sourceVersion *C.char, targetVersion *C.char, retErr *error
extern __declspec(dllexport) void PostJobs(char* fileC, char* sourceVersionC, char* targetVersionC, GoInterface* retErr);

//取消转换 上传与排队阶段
//jobId int
extern __declspec(dllexport) void CancelJob(GoInt jobId);

//删除记录
//jobId int
extern __declspec(dllexport) void DeleteJob(GoInt jobId);

//下载转模后的文件, 且本地库记录了源文件路径 通知服务下载完成
//jobId int
extern __declspec(dllexport) void DownloadJob(GoInt jobId);

//下载路径
//jobId int, ret *string
extern __declspec(dllexport) void DownloadDir(GoInt jobId, GoMem* ret);

//自动推送
//v bool
extern __declspec(dllexport) void SetAutoPush(GoUint8 v);

//自动打开下载目录
//v bool
extern __declspec(dllexport) void SetAutoOpenDir(GoUint8 v);

//推送结果到 0:缓存 1:原路径
//v int
extern __declspec(dllexport) void SetPushTo(GoInt v);

//推送路径
//dir *C.char
extern __declspec(dllexport) void SetCacheDir(char* dir);
extern __declspec(dllexport) void Free(char* s);

#ifdef __cplusplus
}
#endif
